{"version":3,"sources":["SysMLCert.jpg","black-fist.svg","resume.js","home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","id","className","SysMLCertImg","src","SysMLCert","Contact","props","this","resume","contacts","phoneNumber","email","linkedIn","React","Component","Education","education","university","major","graduationYearSemester","data-toggle","title","KeySkills","keySkills","map","skill","key","TechnicalSkills","technicalSkills","Objective","objective","Experience","experience","job","index","company","city","state","jobTitle","from","to","dailyTasks","task","Accomplishments","accomplishments","accomplishment","Resume","error","fetch","then","result","json","data","setState","Navigation","blackfist","alt","width","type","data-target","aria-controls","aria-expanded","aria-label","href","Jumbotron","window","innerWidth","Home","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","$","tooltip","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.03ed51c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/SysMLCert.78111022.jpg\";","module.exports = __webpack_public_path__ + \"static/media/black-fist.e4cfb0d9.svg\";","import React from 'react';\r\nimport './resume.css';\r\nimport SysMLCert from './SysMLCert.jpg';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div id=\"resume\" className=\"row border-bottom border-light\">\r\n            <div className=\"col-12\">\r\n                <h1 className=\"text-center font-weight-bold resume-title\">Resume</h1>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction SysMLCertImg() {\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-12\">\r\n                <img src={SysMLCert} className=\"img-thumbnail\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nclass Contact extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        if (this.props.resume) {\r\n            const contacts = {\r\n                phoneNumber: this.props.resume.phoneNumber,\r\n                email: this.props.resume.email,\r\n                linkedIn: this.props.resume.linkedIn\r\n            }\r\n\r\n            return (\r\n                <div className=\"row\">\r\n                    <div className=\"header col-12 font-weight-bolder text-truncate\">Contacts</div>\r\n                    <p className=\"body col-12 lead\">{contacts.phoneNumber}</p>\r\n                    <p className=\"body col-12 lead text-truncate\">{contacts.email}</p>\r\n                    <p className=\"body col-12 lead text-truncate\">{contacts.linkedIn}</p>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        const phoneNumber = '(910) 767-9769';\r\n        const email = 'lreddsolutions@gmail.com';\r\n        const linkedIn = 'https://www.linkedin.com/in/lamar-redd-0811a811a/';\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"header col-12 font-weight-bolder text-truncate\">Contacts</div>\r\n                <p className=\"body col-12 lead\">{phoneNumber}</p>\r\n                <p className=\"body col-12 lead text-truncate\">{email}</p>\r\n                <p className=\"body col-12 lead text-truncate\">{linkedIn}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Education extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        if (this.props.resume) {\r\n            const education = {\r\n                university: this.props.resume.university,\r\n                major: this.props.resume.major,\r\n                graduationYearSemester: this.props.resume.graduationYearSemester\r\n            };\r\n\r\n            return (\r\n                <div className=\"row\">\r\n                    <div id=\"education\" className=\"header col-12 col-xl-7 font-weight-bolder text-truncate\"\r\n                         data-toggle=\"tooltip\" title=\"Education\">\r\n                        Education\r\n                    </div>\r\n                    <p className=\"body col-12 lead\">{education.university}</p>\r\n                    <div className=\"subheader col-12 font-weight-bold\">Major</div>\r\n                    <p className=\"body col-12 lead\">{education.major} ({education.graduationYearSemester})</p>\r\n                </div>\r\n            );\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\nclass KeySkills extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        if (this.props.resume) {\r\n            return (\r\n                <div className=\"row\">\r\n                    <div className=\"header col-12 font-weight-bolder text-truncate\"\r\n                         data-toggle=\"tooltip\" title=\"Key Skills\">\r\n                        Key Skills\r\n                    </div>\r\n                    <div className=\"body col-12 bg-dark lead\">\r\n                        {\r\n                            this.props.resume.keySkills.map(skill => (\r\n                                <p key={skill}>\r\n                                    {skill}\r\n                                </p>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\nclass TechnicalSkills extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        if (this.props.resume) {\r\n            const technicalSkills = this.props.resume.technicalSkills;\r\n            return (\r\n                <div className=\"row\">\r\n                    <div className=\"header col-12 col-xl-9 text-truncate font-weight-bolder\"\r\n                         data-toggle=\"tooltip\" title=\"Technical Skills\">\r\n                        Technical Skills\r\n                    </div>\r\n                    <div className=\"body col-12 bg-dark lead\">\r\n                        {\r\n                            technicalSkills.map(skill => (\r\n                                <p key={skill}>\r\n                                    {skill}\r\n                                </p>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\nclass Objective extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        if (this.props.resume) {\r\n            return (\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"header font-weight-bolder\">Objective</div>\r\n                        <p className=\"body lead\">\r\n                            {this.props.resume.objective}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\nclass Experience extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        if (this.props.resume) {\r\n            return (\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 bg-dark\">\r\n                        <div className=\"header font-weight-bolder\">Experience</div>\r\n                        {\r\n                            this.props.resume.experience.map((job, index) => (\r\n                                <div key={index + 1}>\r\n                                    <div className=\"subheader font-weight-bold\">\r\n                                        {job.company} {job.city}, {job.state}-{job.jobTitle} {job.from}-{job.to}\r\n                                    </div>\r\n                                    <div className=\"body lead\">\r\n                                        {job.dailyTasks.map(\r\n                                            (task, index) => (<p key={index + 1}>{task}</p>)\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\nclass Accomplishments extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        if (this.props.resume) {\r\n            const accomplishments = this.props.resume.accomplishments;\r\n            return (\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <div className=\"header font-weight-bold\">Accomplishments</div>\r\n                        {\r\n                            accomplishments.map(accomplishment => (\r\n                                <p key={accomplishment} className=\"body lead\">{accomplishment}</p>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\nclass Resume extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            resume: null,\r\n            error: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('resume.json')\r\n            .then(result => result.json())\r\n            .then(\r\n                (data) => {\r\n                    this.setState({\r\n                        resume: data\r\n                    });\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        error: error\r\n                    });\r\n                }\r\n            );\r\n    }\r\n\r\n    render() {\r\n        const resume = this.state.resume;\r\n        const error = this.state.error;\r\n        if (resume) {\r\n            return (\r\n                <div className=\"container text-light bg-dark border border-light\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <Header/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-4 border-right border-light\">\r\n                            <Contact resume={resume}/>\r\n                            <Education resume={resume}/>\r\n                            <KeySkills resume={resume}/>\r\n                            <TechnicalSkills resume={resume}/>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <Objective resume={resume}/>\r\n                            <Experience resume={resume}/>\r\n                            <Accomplishments resume={resume}/>\r\n                            <SysMLCertImg/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div className=\"container text-light bg-dark border border-light\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <Header/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-4 border-right border-light\">\r\n                            <Contact/>\r\n                            <Education/>\r\n                            <KeySkills/>\r\n                            <TechnicalSkills/>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <Objective/>\r\n                            <Experience/>\r\n                            <Accomplishments/>\r\n                            <SysMLCertImg/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Resume;","import React from 'react';\r\nimport blackfist from \"./black-fist.svg\";\r\nimport './home.css';\r\n\r\nfunction Navigation() {\r\n    return (\r\n        <nav className=\"menu navbar navbar-expand-lg navbar-dark\">\r\n            <img src={blackfist} className=\"d-inline-block img-fluid blm\" alt=\"BLM\" width=\"32\"/>\r\n            <span className=\"navbar-brand font-weight-bold mb-0 h1\">Black Lives Matter</span>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                    data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\"\r\n                    aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n                <div className=\"navbar-nav\">\r\n                    <a className=\"top-link nav-item nav-link active\" href=\"#\">\r\n                        Home <span className=\"sr-only\">(current)</span>\r\n                    </a>\r\n                    <a className=\"top-link nav-item nav-link\" href=\"#resume\">\r\n                        Resume <span className=\"sr-only\">(current)</span>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nfunction Jumbotron() {\r\n    if (window.innerWidth <= 575.98) {\r\n        return (\r\n            <div className=\"jumbotron text-center text-light bg-dark\">\r\n                <h1 className=\"site-title\" data-toggle=\"tooltip\" title=\"LR's Solutions\">LR's Solutions</h1>\r\n                <p className=\"site-subtitle lead text-truncate\" data-toggle=\"tooltip\"\r\n                   title=\"For every problem, there's a solution.\">\r\n                    For every problem, there's a solution.\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"jumbotron text-center text-light bg-dark\">\r\n            <h1 className=\"site-title\">LR's Solutions</h1>\r\n            <p className=\"site-subtitle lead text-truncate\">\r\n                For every problem, there's a solution.\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navigation/>\r\n                <Jumbotron/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport './App.css';\r\nimport Resume from './resume.js';\r\nimport Home from './home.js';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App bg-dark my-font\">\r\n            <Home/>\r\n            <Resume/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n/*import Popper from 'popper.js';*/\nimport $ from \"jquery\";\nimport 'bootstrap/dist/js/bootstrap.min';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nfunction setToolTip() {\n    $('[data-toggle=\"tooltip\"]').tooltip();\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nsetToolTip();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}